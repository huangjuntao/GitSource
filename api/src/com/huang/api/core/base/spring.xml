<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialSize" value="1" />
		<property name="maxActive" value="20" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="60000" />

		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="${jdbc.validationsql}" />

		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="50" />

		<property name="filters" value="stat,wall,log4j2" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		destroy-method="destroy">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.huang.api.modules.*.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${Hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${Hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${Hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${Hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<!-- 配置druid监控spring -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
		scope="prototype">
		<property name="patterns">
			<list>
				<value>com.huang.api.modules.*.controller.*</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务传播特性 -->
	<tx:advice id="transactionAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="do*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 事务管理 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<aop:config proxy-target-class="true">
		<!-- druid 监控spring -->
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
		<!-- 配置哪些类的哪些方法参与事务 -->
		<aop:advisor pointcut="execution(* com.huang.api.modules.*.service..*.*(..))"
			advice-ref="transactionAdvice" />
	</aop:config>

	<mvc:annotation-driven />
	<context:component-scan base-package="com.huang.api.core.batabase.impl" />
	<context:component-scan base-package="com.huang.api.modules.*.dao" />
	<context:component-scan base-package="com.huang.api.modules.*.service" />
	<context:component-scan base-package="com.huang.api.modules.*.controller" />

	<bean class="com.huang.api.core.util.InstantiationTracingBeanPostProcessor"></bean>

	<!-- 视图解析器 -->
	<mvc:view-resolvers>
		<mvc:jsp prefix="/WEB-INF/classes/" suffix=".jsp" />
	</mvc:view-resolvers>

	<!-- 此处设置用来直接访问静态资源文件 -->
	<mvc:resources  mapping="/plugin/**" location="/plugin/"></mvc:resources>
	<mvc:resources  mapping="/js/**" location="/js/"></mvc:resources>
	<mvc:resources  mapping="/images/**" location="/images/"></mvc:resources>

	<mvc:interceptors>
		<bean class="com.huang.api.core.util.HelperInterceptor" />
	</mvc:interceptors>

</beans>